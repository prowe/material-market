Transform: AWS::Serverless-2016-10-31
Resources:
  SellRequests:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: material
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: material
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  CreateSellRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Accepts sell HTTP requests and stores them into the ${SellRequests} table
      CodeUri: src/create-sell-request
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 256
      Timeout: 5
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref SellRequests
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SellRequests
      FunctionUrlConfig:
        AuthType: NONE
  CreateSellRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateSellRequestFunction}
  BuyRequests:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  ForwardBuyRequestRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: readdynamo
                Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: !GetAtt BuyRequests.StreamArn
              - Sid: putevents
                Effect: Allow
                Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:DescribeStream
                  - kinesis:DescribeLimits
                Resource: !GetAtt PartitionedBuyRequests.Arn
  ForwardBuyRequest:
    Type: AWS::Pipes::Pipe
    Properties:
      Description: Forward buy request changes into the partition stream
      RoleArn: !GetAtt ForwardBuyRequestRole.Arn
      Source: !GetAtt BuyRequests.StreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: TRIM_HORIZON
      Target: !GetAtt PartitionedBuyRequests.Arn
      TargetParameters:
        KinesisStreamParameters:
          PartitionKey: $.dynamodb.NewImage.material.S
  PartitionedBuyRequests:
    Type: AWS::Kinesis::Stream
    Properties:
      StreamModeDetails:
        StreamMode: ON_DEMAND
  CreateBuyRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Accepts HTTP buy requests and stores them in ${BuyRequests}
      CodeUri: src/create-buy-request
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref BuyRequests
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BuyRequests
      FunctionUrlConfig:
        AuthType: NONE
  CreateBuyRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateBuyRequestFunction}
  ProcessBuyRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Processes buy requests into the available sales
      CodeUri: src/process-buy-request
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          SELL_REQUESTS_TABLE_NAME: !Ref SellRequests
          BUY_REQUESTS_TABLE_NAME: !Ref BuyRequests
      Policies:
        - Statement:
            - Sid: SSMDescribeParametersPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:BatchGetItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PartiQLSelect
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:BatchWriteItem
                - dynamodb:PartiQLDelete
                - dynamodb:PartiQLInsert
                - dynamodb:PartiQLUpdate
              Resource:
                - !GetAtt SellRequests.Arn
                - !GetAtt BuyRequests.Arn
      Events:
        PartitionedBuyRequests:
          Type: Kinesis
          Properties:
            Stream: !GetAtt PartitionedBuyRequests.Arn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
  ProcessBuyRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ProcessBuyRequestFunction}
Outputs:
  CreateSellRequestUrl:
    Value: !GetAtt CreateSellRequestFunctionUrl.FunctionUrl
  CreateBuyRequestUrl:
    Value: !GetAtt CreateBuyRequestFunctionUrl.FunctionUrl
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: Group
      Members:
        - ForwardBuyRequestRole
        - CreateBuyRequestFunction
        - BuyRequests
        - PartitionedBuyRequests