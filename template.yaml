Transform: 
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Resources:
  OpenOrders:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: material
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: material
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  CreateOpenOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub Accepts order HTTP requests and stores them into the ${OpenOrders} table
      CodeUri: src/create-open-order
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 256
      Timeout: 5
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref OpenOrders
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OpenOrders
      FunctionUrlConfig:
        AuthType: NONE

  CreateOpenOrderFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${CreateOpenOrderFunction}

  ForwardOpenOrdersRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: readdynamo
                Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: !GetAtt OpenOrders.StreamArn
              - Sid: putevents
                Effect: Allow
                Action:
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - kinesis:DescribeStream
                  - kinesis:DescribeLimits
                Resource: !GetAtt PartitionedOpenOrders.Arn
  
  ForwardOpenOrders:
    Type: AWS::Pipes::Pipe
    Properties:
      Description: Forward open order changes into the partitioned stream
      RoleArn: !GetAtt ForwardOpenOrdersRole.Arn
      Source: !GetAtt OpenOrders.StreamArn
      SourceParameters:
        DynamoDBStreamParameters:
          StartingPosition: LATEST
        FilterCriteria:
          Filters:
            - Pattern:
                Fn::ToJsonString:
                  dynamodb:
                    NewImage: 
                      material:
                        S: [{ "exists": true }]
      Target: !GetAtt PartitionedOpenOrders.Arn
      TargetParameters:
        KinesisStreamParameters:
          PartitionKey: $.dynamodb.NewImage.material.S

  PartitionedOpenOrders:
    Type: AWS::Kinesis::Stream
    Properties:
      StreamModeDetails:
        StreamMode: ON_DEMAND
  
  ProcessOpenOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Processes partitioned open orders
      CodeUri: src/process-order
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 256
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref OpenOrders
      Policies:
        - Statement:
            - Sid: SSMDescribeParametersPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:Query
                - dynamodb:Scan
                - dynamodb:BatchGetItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PartiQLSelect
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:BatchWriteItem
                - dynamodb:PartiQLDelete
                - dynamodb:PartiQLInsert
                - dynamodb:PartiQLUpdate
              Resource:
                - !GetAtt OpenOrders.Arn
      Events:
        PartitionedOpenOrders:
          Type: Kinesis
          Properties:
            Stream: !GetAtt PartitionedOpenOrders.Arn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1
  
  ProcessOpenOrdersFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${ProcessOpenOrdersFunction}

Outputs:
  CreateOpenOrderUrl:
    Value: !GetAtt CreateOpenOrderFunctionUrl.FunctionUrl